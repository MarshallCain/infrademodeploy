# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  check_aws_version:
    docker:
      - image: cimg/aws:2023.08
    steps:
      - run: aws --version
      - run: echo ${CIRCLE_WORKFLOW_ID:0:5}

  create_infrastructure:
    docker:
      - image: cimg/aws:2023.08
    steps:
      - checkout
      - run:
          name: Create Cloudformation stack
          command: |
              aws cloudformation deploy --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      - destroy_environment

  configure_infrastructure:
    docker:
      - image: python:3.11-alpine3.17
    steps:
      - checkout
      - run: pwd
      - run: ls
      - add_ssh_keys:
          fingerprints: ["4a:fb:52:e2:14:ef:58:01:88:a1:38:7e:fc:ea:aa:ef"]
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory main-nodesetup.yml


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  my-workflow:
    jobs:
      - check_aws_version
      - configure_infrastructure
#      - create_infrastructure:
#          requires:
#            - check_aws_version
